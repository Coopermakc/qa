.question
  h1= @question.title
  p= @question.body
  = render partial: 'votes/vote', locals: { type: 'question', votable: @question }
  ul
  -@question.attachments.each do |a|
      li id="attachment-id-#{a.id}"
      li= link_to a.file.identifier, a.file.url
      br
       - if user_signed_in? && current_user.author_of?(@question)
       =link_to 'Delete', attachment_path(a), method: :delete, remote: true

  - if user_signed_in? && current_user.author_of?(@question)
    p = link_to 'Remove', question_path, method: :delete
    p = link_to 'Edit question', '', class: 'edit-question-link'
    p
.subscriptions
    - if can?(:destroy, @subscription)
      = link_to 'Unsubscribe', subscription_path(@subscription.id), method: :delete, remote: true
    - else
      = link_to 'Subscribe', question_subscriptions_path(@question), method: :post, remote: true
.edit_question
      = form_for @question, remote: true do |f|
        = f.label :title
        = f.text_field :title
        = f.label :body, 'Text'
        = f.text_area :body
        = f.submit 'Save'
.comments
  -@question.comments.each do |c|
    = render partial:'comments/comment', locals: { comment: c }
  = link_to 'Add comment','', class: 'new-comment-link', data: { commentable_id: @question.id }

  =form_for [@question, @question.comments.build], remote: true, html: { id: "new-comment-#{@question.id}"} do |f|
      = f.label :comment_body, "Comment"
      = f.text_area :comment_body
      = f.submit 'Save'

.answers
  = render 'answers/answers'

= form_for [@question, @answer], remote: true do |f|
  p
    = f.label :body, 'Your answer'
    .answer-errors
    = f.text_area :body
  p
    =f.fields_for :attachments, @answer.attachments.build do |a|
      = render 'attachments/attachments_fields', f: a
      = link_to_add_association 'Add', f, :attachments, partial: 'attachments/attachments_fields'
  p= f.submit 'Create'
